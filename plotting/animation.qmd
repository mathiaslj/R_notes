---
title: "Animation"
format: html
---

See [lecture notes](https://www.stat.auckland.ac.nz/~paul/stats787/Current/Topics/animation.html) about animation and more importantly the [answer to the lab](https://mathiaslj.github.io/stats787uoa-data-visualisation/labs/lab6_answer.html).

## Low-level approach - [`magick`](https://docs.ropensci.org/magick/)

Approach to draw every frame of the animation. More work but also more control.

Basic steps to produce animation:

- Assign value (fx. `img`) to call of `magick::image_graph` to open a `magick` graphics device
- Run a loop that draws each frame of the animation
- Call `dev.off()` to close the `magick` graphics device
- Run `image_animate(img)`

## High-level approach - [gganimate](https://gganimate.com/)

> NOTE! Install package [gifski](https://cran.r-project.org/web/packages/gifski/index.html). If installed, `gganimate` will make sure to use that as the backend when creating the GIFs

See the [getting started](https://gganimate.com/articles/gganimate.html) article as well as run examples in references section of each `transition_...` function.

### Create animation "superimposed" onto static image

See example how to do this in [this model answer](https://mathiaslj.github.io/stats787uoa-data-visualisation/labs/lab6_answer.html#creating-the-animation-with-gganimate)

### Misc notes about `gganimate`

- If using `exit/enter_xx` function you NEED to specify a grouping aesthetic EXPLICITLY, which will devide data into subsets that the transitions will display in each frame.
- To slow down the animation, assign it a value `p`, and then use `animate(p, fps = 1)` fx. to control the frames pr. second.